<?phpdefine('IN_somCBT', true);$phpEx = 'php';$somCBT_root_path = './../';define('QUESTIONS_PER_PAGE', 30);include($somCBT_root_path . 'common.php');//include($somCBT_root_path . 'includes/question.php');$mode = ( isset($HTTP_GET_VARS['action']) ) ? ($HTTP_GET_VARS['action']) : ( ( isset($HTTP_POST_VARS['action']) ) ? ($HTTP_POST_VARS['action']) : '') ;$cid =  ( isset($HTTP_GET_VARS['ARG1']) ) ? ($HTTP_GET_VARS['ARG1']) : ( ( isset($HTTP_POST_VARS['ARG1']) ) ? ($HTTP_POST_VARS['ARG1']) : -1) ;$qid =  ( isset($HTTP_GET_VARS['ARG2']) ) ? ($HTTP_GET_VARS['ARG2']) : ( ( isset($HTTP_POST_VARS['ARG2']) ) ? ($HTTP_POST_VARS['ARG2']) : -1) ;$quesid =  ( isset($HTTP_GET_VARS['ARG3']) ) ? ($HTTP_GET_VARS['ARG3']) : ( ( isset($HTTP_POST_VARS['ARG3']) ) ? ($HTTP_POST_VARS['ARG3']) : 0) ;$start =  ( isset($HTTP_GET_VARS['start']) ) ? ($HTTP_GET_VARS['start']) : ( ( isset($HTTP_POST_VARS['start']) ) ? ($HTTP_POST_VARS['start']) : 0) ;$year = ( isset($HTTP_GET_VARS['ARGyr']) ) ? ($HTTP_GET_VARS['ARGyr']) : ( ( isset($HTTP_POST_VARS['ARGyr']) ) ? ($HTTP_POST_VARS['ARGyr']) : 0) ;$lock = ( isset($HTTP_GET_VARS['lck']) ) ? ($HTTP_GET_VARS['lck']) : ( ( isset($HTTP_POST_VARS['lck']) ) ? ($HTTP_POST_VARS['lck']) : 'n') ;//// Start session management//$userdata = session_pagestart($user_ip, PAGE_QUIZ_CREATE);init_userprefs($userdata);//// End session managementif( $userdata['session_logged_in'] && ( ( $userdata['user_level'] == ADMIN) || ( $userdata['user_level'] == TEACHER) ) ) {	$nav_path = '<a href="'.append_sid($somCBT_root_path.'index.php').'" class="nav">Home</a> ' ;	include($somCBT_root_path . 'includes/page_header.php');	$template->set_filenames(array('body' => 'quiz/questions.tpl')	);	// Find whether the user has access			if ($userdata['user_level'] == ADMIN) {		$sql = "SELECT c.*, q.* FROM " . COURSE_TABLE ." c, ".QUIZ_TABLE ." q  WHERE c.course_id = " . $cid ." AND q.quiz_id = ".$qid. " LIMIT 1" ;	}	else if  ( $userdata['user_level'] == TEACHER ) {		$sql = "SELECT c.*, q.*, cu.access_level FROM " . COURSE_USERS_TABLE . " cu, ".QUIZ_TABLE ." q , ".COURSE_TABLE." c WHERE c.course_id = cu.course_id AND cu.course_id = ".$cid." AND q.quiz_id = ".$qid. "  AND cu.user_id = " . $userdata['session_user_id'] ." LIMIT 1";	}	if ($result1 = $db->sql_query($sql) ) {			if( $course_quiz = $db->sql_fetchrow($result1) ) 	{ // only if it is a valid course & quiz number			$nav_path .= ' -  <a href="'.append_sid($somCBT_root_path.'course.php?ARG1='.$cid).'" class="nav">'.$course_quiz['course_shortname'].'</a> -  <a href="'.append_sid('index.php?action=show&ARG1='.$cid).'" class="nav">'.Test.'</a> -  <a href="'.append_sid('questions.php?action=all&ARG1='.$cid.'&ARG2='.$qid).'" class="nav">'.$course_quiz['quiz_name'].'</a> ' ;			$lock = $course_quiz['lockyn'];			$template->assign_block_vars('quiz_admin',array('TH_NAME' => 'Options'));						if (( $userdata['user_level'] == ADMIN ) || ($course_quiz['access_level'] == DIRECTOR)) {				if($lock=='n') {					$template->assign_block_vars('quiz_admin.links',array('VALUE' => '&nbsp;<a href="javascript:void(0);" onClick = "popUp(\''.append_sid('browser.php?ARG1='.$cid.'&ARG2='.$qid).'\',800,600,1)" class="genmed" >Add Question</a>'));								$template->assign_block_vars('quiz_admin.links',array('VALUE' => '&nbsp;<a href="javascript:select_some(document.questions ,\'question_order\', \'del\'); " class="genmed" >Delete Question(s)</a>'));				}												}			$template->assign_block_vars('quiz_admin.links',array('VALUE' => '&nbsp;<a href="'.append_sid('questions.php?action=all&ARG1='.$cid.'&ARG2='.$qid.'&lck='.$lock).'\'" class="genmed" >List Questions</a>'));									if ($userdata['user_level'] == ADMIN) {				$template->assign_block_vars('quiz_admin.links',array('VALUE' => '&nbsp;<a href="javascript:void(0);" onClick = "popUp(\''.append_sid('instance.php?ARG1='.$cid.'&ARG2='.$qid).'\',800,600,1)" class="genmed" >Test Settings</a>'));				$template->assign_block_vars('quiz_admin.links',array('VALUE' => '&nbsp;<a href="'.append_sid('activity.php?ARG1='.$cid.'&ARG2='.$qid.'&ARG3='.$course_quiz['course_shortname']).'\'" class="genmed" >Test Activity</a>'));								}			//The following was commented out by SMQ on 1/6/05. The link did not appear to be working, and it was decided that the 'print test' functionality offered the same capability - SMQ			//$template->assign_block_vars('quiz_admin.links',array('VALUE' => '&nbsp;<a href="'.append_sid('questions.php?action=all&ARG1='.$cid.'&ARG2='.$qid).'\'" class="genmed" >Preview Test</a>'));			$template->assign_block_vars('quiz_admin.links',array('VALUE' => '&nbsp;<a href="javascript:popUp(\''.append_sid($somCBT_root_path.'quiz/print.php?action=all&ARG1='.$cid.'&ARG2='.$qid.'&lck='.$lock.'&ARGyr='.$year).'\',800,600,1)"'.' class="genmed" >Print Test</a>'));															if (( $userdata['user_level'] == ADMIN ) || ($course_quiz['access_level'] == DIRECTOR)) {				$template->assign_block_vars('quiz_admin',array('TH_NAME' => 'Organize'));				$template->assign_block_vars('quiz_admin.links',array('VALUE' => 'Move up by <Select onChange="javascript:void(document.questions.offset.value = this.value)"><option value="1" selected>1</option><option value="2">2</option><option value="3">3</option><option value="4">4</option><option value="5">5</option><option value="10">10</option></Select>&nbsp;<a href="javascript:select_one(document.questions ,\'question_order\', \'up\');" class="action">Go</a>'));				$template->assign_block_vars('quiz_admin.links',array('VALUE' => 'Move down by <Select onChange="javascript:void(document.questions.offset.value = this.value)"><option value="1" selected>1</option><option value="2">2</option><option value="3">3</option><option value="4">4</option><option value="5">5</option><option value="10">10</option></Select>&nbsp;<a href="javascript:select_one(document.questions ,\'question_order\', \'down\');" class="action">Go</a>'));			}////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////			if ( ($mode == 'del') &&(( $userdata['user_level'] == ADMIN ) || ($course_quiz['access_level'] == DIRECTOR)) ){					$qids_to_delete = explode(",",$HTTP_POST_VARS['question_order']);						// List of questionid  and their order present in the quiz					$sql = "SELECT ques_id, ques_order FROM ".QUIZ_QUESTIONS_TABLE." WHERE quiz_id = ".$qid. " AND course_id =".$cid." ORDER BY ques_order";					if ( ($result = $db->sql_query($sql)) ) {						$quiz['questions']  = array();  													while( $ques = $db->sql_fetchrow($result) )						{								//$quiz['questions'][$ques['ques_order']] = array();							$quiz['questions'][$ques['ques_id']] = array('qid'=> $ques['ques_id'], 'order' => $ques['ques_order']) ;						}					}									// extracting only the question ids					foreach($quiz['questions'] as $key => $row) { $qids[$key] = $row["qid"]; }					$ques= array();					foreach($qids_to_delete as $value => $row) {										$id = array_search($row, $qids); // search for the question in  the already present set of questions						$ques[$id] =  $quiz['questions'][$id];												$sql = "DELETE FROM ".QUIZ_QUESTIONS_TABLE. " WHERE course_id= ".$cid." AND quiz_id = ".$qid." AND ques_id=".$row . " LIMIT 1";						$db->sql_query($sql);					}					unset($qids);					$result = array_diff_assoc($quiz['questions'], $ques);					// array_multisort() requires an array of "columns" instead.  Here's how to get the arrays of columns.					$order = array();					foreach($result as $key => $row) {										$qids[$key] = $row["qid"];							$order[$key] = $row["order"];					}					array_multisort($order, SORT_ASC, $result);					foreach($result as $key => $row) {						if ($quiz['questions'][$row['qid']]['order'] != ( $key + 1) ) {  // order has ben changed//							echo $row['qid']."===".$row['order']."---".( $key +1 )."<br>";							$sql = "UPDATE ".QUIZ_QUESTIONS_TABLE. " SET ques_order = ".($key+1)." WHERE ques_id=" .$row['qid']." AND ques_order=". $row['order'] ." AND course_id= ".$cid." AND quiz_id = ".$qid;							$db->sql_query($sql);						}					}				$mode='all';												}// eof del			if ( ( ($mode == 'up' ) || ($mode == 'down' ) ) && ( ( $userdata['user_level'] == ADMIN ) || ($course_quiz['access_level'] == DIRECTOR) ) ){								$move_question_id =   ( isset($HTTP_POST_VARS['question_order']) ) ? ($HTTP_POST_VARS['question_order']) : 0 ;				$move_by =   ( isset($HTTP_POST_VARS['offset']) ) ? ($HTTP_POST_VARS['offset']) : 0 ;								// List of questionid  and their order present in the quiz in the form of $quiz['questions'][order] = questionid				$sql = "SELECT ques_id, ques_order FROM ".QUIZ_QUESTIONS_TABLE." WHERE quiz_id = ".$qid. " AND course_id =".$cid." ORDER BY ques_order";				if ( ($result = $db->sql_query($sql)) ) {					$quiz['questions']  = array();  												while( $ques = $db->sql_fetchrow($result) )					{							$quiz['questions'][$ques['ques_order']] = $ques['ques_id'] ;					}				}				$move_qid_order =  array_search($move_question_id, $quiz['questions'] );				if ( ( ($move_qid_order - $move_by) > 0 ) &&   ($mode == 'up' ) ) { // new order for the question should be > 0 , otherwise dont move					for ( $x = ($move_qid_order-1) ; $x >= ($move_qid_order - $move_by) ; $x--) {											$sql = " UPDATE ". QUIZ_QUESTIONS_TABLE . " SET ques_order = ".($x+1)." WHERE course_id = ".$cid." AND quiz_id = ".$qid." AND ques_id = ". $quiz['questions'][$x];						$db->sql_query($sql);					}					$sql = " UPDATE ". QUIZ_QUESTIONS_TABLE . " SET ques_order = ".($move_qid_order - $move_by)." WHERE course_id = ".$cid." AND quiz_id = ".$qid." AND ques_id = ". $move_question_id;					$db->sql_query($sql);								} // eof new order for up								if ( ( ($move_qid_order + $move_by) <= count($quiz['questions']) ) &&   ($mode == 'down' ) ) { // new order for the question should be < total questions , otherwise dont move					for ( $x = ($move_qid_order + 1) ; $x <= ($move_qid_order + $move_by) ; $x++) {											$sql = " UPDATE ". QUIZ_QUESTIONS_TABLE . " SET ques_order = ".($x-1)." WHERE course_id = ".$cid." AND quiz_id = ".$qid." AND ques_id = ". $quiz['questions'][$x];						$db->sql_query($sql);					}					$sql = " UPDATE ". QUIZ_QUESTIONS_TABLE . " SET ques_order = ".($move_qid_order + $move_by)." WHERE course_id = ".$cid." AND quiz_id = ".$qid." AND ques_id = ". $move_question_id;					$db->sql_query($sql);								} // eof new order for down				unset($quiz['questions']);				$mode = 'all';			} // eof up									if ($mode == 'all' ) {				if ($lock == 'y') {					$padlck = '<img src="./../templates/default/images/locked.gif"';				}else{					$padlck = '<img src="./../templates/default/images/openlck.gif"';				}							$sql = "SELECT count(*) AS total_questions FROM " .QUIZ_QUESTIONS_TABLE ." WHERE quiz_id = ".$qid ;				if ($result2 = $db->sql_query($sql) ) {						if( !( $questions_count = $db->sql_fetchrow($result2) ) ) 	{						$questions_count['total_questions'] = 0 ;					}				} 				if ( ($start > $questions_count['total_questions']) || ($start<0) ) { $start=0; }				//problem most like here - SMQ 4/18/06				$template -> assign_block_vars('quiz', array('ACTION' => append_sid('questions.php?ARG1='.$cid.'&ARG2='.$qid.'&start='.$start.'&lck='.$lock),  'PAGINATION' => generate_pagination( intval($questions_count['total_questions'] ), QUESTIONS_PER_PAGE, $start, append_sid("questions.php")."&action=all&ARG1=".$cid."&ARG2=".$qid."&start=", 'bodyBlue12'), 'LCKIMG' => $padlck));				if ($lock=='n') {					$sql = "SELECT quiz_ques.ques_id, ques.question_id, ques.ques_name, ques.cat_id, quiz_ques.ques_order, cat.cat_name FROM " .QUIZ_QUESTIONS_TABLE ." quiz_ques, ".QUESTIONS_TABLE." ques, ".CATEGORY_TABLE." cat WHERE quiz_ques.ques_id = ques.question_id AND quiz_ques.quiz_id = ".$qid ." AND quiz_ques.cat_id=cat.cat_id ORDER BY ques_order";				}else{					$sql = "SELECT qq.*, cat.cat_name FROM " .QUIZ_QUESTIONS_TABLE ." qq, ".CATEGORY_TABLE." cat WHERE qq.quiz_id = ".$qid ." AND qq.cat_id=cat.cat_id ORDER BY ques_order ";				}				if ($result2 = $db->sql_query($sql) ) {					$class = 'row1';					for ($i = 0 ; ( ($i< $questions_count['total_questions']) &&  ($questions = $db->sql_fetchrow($result2)) ) ; $i++) {						$class = ( strcmp($class,"row1") == 0 ) ? "" : "row1" ;						$dbquesno = $questions['ques_id'];//grab question id as it exists in the database - added by SMQ						if ( ($userdata['user_level'] == ADMIN) || ($courses['access_level'] == DIRECTOR ) || ( ($userdata['session_user_id'] == $questions['createdby']) && $question['allow_edit'] == 1)) {							// eve though i am the creator of question, if director disabled allow edit then dont show question							$question_click = 'javascript:popUp(\''.append_sid($somCBT_root_path.'questions/questions.php?action=view&ARG1='.$cid.'&ARG2='.$questions['cat_id'].'&ARG3='.$questions['ques_id'].'&lck='.$lock.'&QUIZ='.$qid).'\',800,600,1)';						}						else {							$question_click = 'javascript:popUp(\''.append_sid($somCBT_root_path.'questions/preview.php?ARG1='.$cid.'&ARG3='.$questions['ques_id'].'&lck='.$lock.'&QUIZ='.$qid).'\',800,600,1)';						}						if (( $userdata['user_level'] == ADMIN ) || ($course_quiz['access_level'] == DIRECTOR)) {							$chkbox = '<input type="checkbox" value="'.$questions['ques_id'].'">';						} else {							$chkbox = '';						}												$template -> assign_block_vars('quiz.quiz_questions', array(								'Q_NAME' => $questions['ques_name'],								'Q_NO' =>  $start + $i + 1,								'DB_NO' => $dbquesno,//added by SMQ to deal with question record number								'CAT' => $questions['cat_name'],								'CLASS' =>  $class,								'Q_PREVIEW_CLICK' =>'javascript:popUp(\''.append_sid($somCBT_root_path.'questions/preview.php?ARG1='.$cid.'&ARG3='.$questions['ques_id'].'&lck='.$lock.'&QUIZ='.$qid).'\',800,600,1)',								'CLICK' => $question_click,								'C_BOX' => $chkbox							));					}				}			}// eof list			} // eof of course & quiz validity	}		$template->assign_vars(array(				'S_ROOTDIR' => $somCBT_root_path,				'S_NAV' => $nav_path)			);	}else {	if ( $userdata['user_level'] == STUDENT ) {		redirect(append_sid("index.php", true));		} else {		redirect(append_sid("login.php", true));	}}//// Generate the page//$template->pparse('overall_header');$template->pparse('body');include($somCBT_root_path . 'includes/page_tail.'.$phpEx);?>