<?phpdefine('IN_somCBT', true);$phpEx = 'php';$somCBT_root_path = './../';include($somCBT_root_path . 'common.php');$mode = ( isset($HTTP_GET_VARS['action']) ) ? ($HTTP_GET_VARS['action']) : ( ( isset($HTTP_POST_VARS['action']) ) ? ($HTTP_POST_VARS['action']) : '') ;$cid =  ( isset($HTTP_GET_VARS['ARG1']) ) ? ($HTTP_GET_VARS['ARG1']) : ( ( isset($HTTP_POST_VARS['ARG1']) ) ? ($HTTP_POST_VARS['ARG1']) : 0) ;$qid =  ( isset($HTTP_GET_VARS['ARG2']) ) ? ($HTTP_GET_VARS['ARG2']) : ( ( isset($HTTP_POST_VARS['ARG2']) ) ? ($HTTP_POST_VARS['ARG2']) : 0) ;$ca =  ( isset($HTTP_GET_VARS['ARG3']) ) ? ($HTTP_GET_VARS['ARG3']) : ( ( isset($HTTP_POST_VARS['ARG3']) ) ? ($HTTP_POST_VARS['ARG3']) : 0) ;//// Start session management//$userdata = session_pagestart($user_ip, PAGE_QUIZ_INDEX);init_userprefs($userdata);//// End session management$display=1;$order = 0;if( $userdata['session_logged_in'] && ( ( $userdata['user_level'] == ADMIN) || ( $userdata['user_level'] == TEACHER) ) ) {	if ($userdata['user_level'] == ADMIN) {		$sql = "SELECT * FROM ".COURSE_TABLE." WHERE course_id = ".$cid."  LIMIT 1";			}	else if  ( $userdata['user_level'] == TEACHER ) {		$sql = "SELECT c.*, cu.access_level FROM " . COURSE_USERS_TABLE . " cu, ".COURSE_TABLE." c WHERE c.course_id = cu.course_id AND cu.course_id = ".$cid."  AND cu.user_id = " . $userdata['session_user_id'] ." LIMIT 1";	}	if ($result = $db->sql_query($sql) ) {			$courses = $db->sql_fetchrow($result) ;	}	$nav_path = 'Question Browser' ;	include($somCBT_root_path . 'includes/page_header.php');	$template->set_filenames(array(	'body' => 'quiz/browser_iframe.tpl'));	// List of questions already present in the quiz	$sql = "SELECT ques_id, ques_order FROM ".QUIZ_QUESTIONS_TABLE." WHERE quiz_id = ".$qid. " ORDER BY ques_order";	if ( ($result = $db->sql_query($sql)) ) {		$quiz['questions']  = array();  									while( $ques = $db->sql_fetchrow($result) )		{						array_push($quiz['questions'], $ques['ques_id'] );						if ($ques['ques_order'] > $order ) {				$order = $ques['ques_order'];			}		}	}	if ( ($mode == 'addsel') && ( ( $userdata['user_level'] == ADMIN ) || ( $courses['access_level'] == DIRECTOR ) ) ){		$post_questions = explode (",",$HTTP_POST_VARS['question_order']);				$cats = array_filter($post_questions, "extract_cat"); // contains only categories				$post_questions = array_diff( $post_questions, $cats); // only questions 		array_walk($cats, create_function('&$v', '$v=substr($v,4);')); // only the cat_id removing the prefix cat_							array_walk($post_questions, create_function('&$v', '$v = substr($v, ( strrpos($v,"_") + 1) );') ); // only the question_id removing the prefix q_(cat_id)_			reset($cats);				foreach($cats as $value ) {					$sql = "SELECT * FROM ".QUESTIONS_TABLE." WHERE course_id = ".$cid. " AND cat_id = ".$value ;						if ( $res = $db->sql_query($sql) ) {				while ($ques = $db->sql_fetchrow($res)) {					if (! (in_array($ques['question_id'], $quiz['questions'])) ) {						array_push($post_questions,$ques['question_id']);					}				}			}		}		reset($quiz['questions']); reset ($post_questions);		$post_questions = array_unique($post_questions);		$category = -1 * intval($ca);		echo $category;				foreach($post_questions as $value ) {			$order = $order +1 ;			$sql = "INSERT INTO ". QUIZ_QUESTIONS_TABLE . "  (quiz_id, course_id, ques_id, cat_id, ques_order) VALUES 					( ".$qid. ", ".$cid.", ".$value.", ".$category.", ".$order." )";			$db->sql_query($sql);				}				$template->assign_block_vars('response',array('TQ_NOW' => count($post_questions), 'TQ' => count($post_questions)+count($quiz['questions'])));		$display=0;	} // eof add selected questions	if ( ($display) && ( ( $userdata['user_level'] == ADMIN ) || ( $courses['access_level'] == DIRECTOR ) ) ){			$sql = "SELECT cat_id, cat_name FROM " . CATEGORY_TABLE ." WHERE course_id = " . $cid ;			if ( $result1 = $db->sql_query($sql)  ) {					while (  $cat = $db->sql_fetchrow($result1)  ) 	{ 							if ((-1 * intval($ca)) == $cat['cat_id'] )	{ // ca is negative elobrate					$template->assign_block_vars('category',array('C_NAME' => '<a href="'.append_sid('iframe.php?ARG1='.$cid.'&ARG2='.$qid.'&ARG3='.$cat['cat_id']).'\'" class="genmed" >'.$cat['cat_name'].'</a>',																'CHECK_BOX' => '<input type="checkbox" name="cat_'.$cat['cat_id'].'" onclick="select_all_none(this, '.$cat['cat_id'].')">',																'IMAGE' => 'openfolder.gif'																));									$sql = "SELECT ques_name, question_id FROM ". QUESTIONS_TABLE ." WHERE course_id = ".$cid. " AND cat_id = ". $cat['cat_id'] ." ORDER BY question_id";														if ($result2 = $db->sql_query($sql) ) {						$class='row1';						while ( $ques = $db->sql_fetchrow($result2) ) 	{ 							if (in_array($ques['question_id'], $quiz['questions']) ) {								$ispresent = 'disabled';								$present_icon = '<span class="generror">*</span>';							}							else {								$ispresent= '';								$present_icon ='';							}							$class = ( strcmp($class,"row1") == 0 ) ? "" : "row1" ;							$template->assign_block_vars('category.questions',array('QUES_NAME' => '<a href="javascript:void(0);" class="gensmall">'.$ques['ques_name'].'</a>&nbsp;'.$present_icon,																				'CHECK_BOX' => '<input type="checkbox" name="q_'.$cat['cat_id'].'_'.$ques['question_id'].'" onclick="dirform.cat_'.$cat['cat_id'].'.checked = 0;"'.$ispresent.'>',																				'CLASS' => $class));											} //eof ques while										} //eof question resultset				} // eof open/close if				else {					$template->assign_block_vars('category',array('C_NAME' => '<a href="'.append_sid('iframe.php?ARG1='.$cid.'&ARG2='.$qid.'&ARG3='.(-1 * intval($cat['cat_id']))).'\'" class="genmed" >'.$cat['cat_name'].'</a>',																//'CHECK_BOX' => '<input type="checkbox" name="cat_'.$cat['cat_id'].'" onclick="select_all_none(this, '.$cat['cat_id'].')">',																				'IMAGE' => 'folder.gif'																		));				}			} // eof while $cat		}	} // eof display check		//The following deals with when a user clicks the "add selected" button, and is returned to the question listing page (quiz/questions.php) - SMQ// SMQ added the currently-selected category as "ARG3" in order to write the category id to the quiz questions table. - SMQ	$template->assign_vars(array(				'S_ROOTDIR' => $somCBT_root_path,				'ACTION' => append_sid('iframe.php?action=addsel&ARG1='.$cid.'&ARG2='.$qid.'&ARG3='.$ca),				'S_NAV' => $nav_path)			);	$template->pparse('body');	}else {	redirect(append_sid("login.php", true));}?><?phpfunction extract_cat($value) {	if ( (strcmp(substr($value,0,4),"cat_") ) == 0 ) {		return true;	}else {		return false;	}	}function get_id( &$item1) {	echo substr($item1, ( strrpos($item1,"_")+1) );//	print_r( explode("_",$item1));	echo "<br>";//	$item1 =  substr($item1,4);}?>